generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}


model User {
    id                  String                @id @unique() @default(uuid())
    email               String                @unique()
    firstName           String?
    lastName            String?
    middleName          String?
    isMailVerified      Boolean                @default(false)
    BvnNumber           String?   
    isCredentialsSet    Boolean               @default(false)
    isGoogleUser        Boolean
    pin                 String?
    password            String?
    phoneNumber         String?
    country   String?
    countryCode String?
    dateOfBirth String?
    avatar String?
    gender String?
    merchantID          String
    profileId           String?               @unique
    MailVerificationOTp VerificationOTp[]
    session             Session[]             
    sessionId           String?                @unique
    devices  UserDevices[]
    createdAt           DateTime              @default(now())
    updatedAt           DateTime              @updatedAt
    usaveforu       USaveForU[]
    refs TransactionRefs[]


}

enum InvestmentCurrency{
    NGN
    USD
}

enum VerificationTYPE{
    MAILVERIFICATION
    DEVICEVERIFCATION
    RESETPASSWORD
}

enum TransactionType{
    WITHDRAWAL
    DEPOSIT
}


model VerificationOTp {
    id          String   @id @unique() @default(uuid())
    user        User     @relation(fields: [userId], references: [id])
    userId      String
    createdAt   DateTime @default(now())
    expiredTime DateTime
    otpCode     String
    type       VerificationTYPE
}


//keeps track of access token and expiry time
model Session{
    id String @id @unique() @default(uuid())
    user User @relation(fields: [userId], references: [id])
    userId String
    token String
    createdAt  DateTime @default(now())
    expiredAt DateTime
    deviceId String
}

//keeps tracks of devices useer have used to signIn
model UserDevices{
        id String @id @unique() @default(uuid())
        device String
        user User @relation(fields: [userId], references: [id])
        userId String
}



model USaveForU{
    id String @id @unique() @default(uuid())
    user        User     @relation(fields: [userId], references: [id])
    userId String
    currency InvestmentCurrency
    investmentCapital  Int
    returnOfInvestment Int
    totalInvestment   Int
    isActivated Boolean                @default(false)
    savingsName String
    expectedDepositDay Int
    expectedMonthlyAmount Int
    endingDate DateTime
    createdAt  DateTime @default(now())
    history ForUHistory[]

}

model ForUHistory{
    id String @id @unique() @default(uuid())
    forUSaving USaveForU @relation(fields: [savingsid], references: [id])
    savingsid String
    type TransactionType
    createdAt DateTime @default(now())

}
enum DESCRIPTIONTYPE {
    FORU
    EMERGENCY
    UANDI 
    CABAL
}


model TransactionRefs{
    id String @id @unique() @default(uuid())
    user        User     @relation(fields: [userId], references: [id])
    refrence String
    userId String
    description DESCRIPTIONTYPE
}


